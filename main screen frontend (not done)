import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import javax.swing.Icon;
public class MainScreen {
 private static final float RIGHT_ALIGNMENT = 0;
JFrame frame;
 JPanel contentPane;
 JLabel prompt1, prompt2, prompt3, stat;
 JTextField newActionText;
 JButton fileMenuButton;
 JScrollPane scrollPane;
 JTextArea textArea;
 public MainScreen(){
	 /* Create and set up the frame */
	 frame = new JFrame("To Do List");
	 frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	 frame.setSize(600,800);
	 frame.setBackground(Color.BLUE);
	 /* Create content pane with a GridLayout and empty borders */
	 contentPane = new JPanel();
	 contentPane.setLayout(new BorderLayout());
	 contentPane.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
	 contentPane.setBackground(new Color(173, 216, 230));
	 
	 ImageIcon fileImage = new ImageIcon("C:/Users/lshen0597/eclipse-workspace/ToDoList/src/menu_456243 (3).png");
	 fileMenuButton = new JButton(fileImage);
	 fileMenuButton.setActionCommand("File");
	 fileMenuButton.setOpaque(false);
	 fileMenuButton.setContentAreaFilled(false);
	 fileMenuButton.setBorderPainted(false);
	 //fileMenuButton.setAlignmentX(200);
	 contentPane.add(fileMenuButton, BorderLayout.EAST);
	
	 textArea = new JTextArea(5,40);
	 //textArea.setSize(30, 100);
	 scrollPane= new JScrollPane(textArea);
	 //scrollPane.setPreferredSize(new Dimension(450, 110));
	 scrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS); 
	 contentPane.add(scrollPane, BorderLayout.SOUTH);
	 
	 newActionText = new JTextField("New Action");
	 newActionText.setSize(200, 50);
	 contentPane.add(newActionText, BorderLayout.SOUTH);
	 
 	/* Add content pane to frame */
	 frame.setContentPane(contentPane);
	 /* Size and then display the frame. */
	 frame.pack();
	 frame.setVisible(true);
 }
 
 public void actionPerformed(ActionEvent event) {
	
 }
 
 private static void runGUI() {
	 JFrame.setDefaultLookAndFeelDecorated(true);
	 MainScreen ms = new MainScreen();
 }
 
 public static void main(String[] args) {
	 /* Methods that create and show a GUI should be
	 run from an event-dispatching thread */
	 javax.swing.SwingUtilities.invokeLater(new Runnable() {
	 public void run() {
	 runGUI();
	 }
	 });
	 }
 }
