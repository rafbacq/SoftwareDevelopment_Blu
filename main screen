import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
public class MainScreen implements ActionListener, MouseListener{
 private static final float RIGHT_ALIGNMENT = 0;
JFrame frame;
 JPanel contentPane, topPanel, middlePanel, bottomPanel;
 JLabel title;
 JTextField newActionText;
 JButton fileMenuButton, addButton;
 JScrollPane scrollPane;
 JTextArea textArea;
 JPanel actionsPanel = new JPanel(new GridLayout(0,1));
 ArrayList<String> actions = new ArrayList<String>();
 ArrayList<String> status = new ArrayList<String>();
 public MainScreen(){
	 /* Create and set up the frame */
	 frame = new JFrame("To Do List");
	 frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	 //frame.setSize(600,800);
	 frame.setBackground(Color.BLUE);
	 /* Create content pane with a GridLayout and empty borders */
	 contentPane = new JPanel();
	 contentPane.setLayout(new BorderLayout(0, 10));
	 contentPane.setPreferredSize(new Dimension(600, 800));

	 contentPane.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
	 contentPane.setBackground(new Color(173, 216, 230));
	 
	 topPanel = new JPanel(new BorderLayout());
	 ImageIcon fileImage = new ImageIcon("C:/Users/lshen0597/eclipse-workspace/ToDoList/src/menu_456243 (3).png");
	 fileMenuButton = new JButton(fileImage);
	 fileMenuButton.setActionCommand("File");
	 fileMenuButton.setOpaque(false);
	 fileMenuButton.setContentAreaFilled(false);
	 fileMenuButton.setBorderPainted(false);
	
	 
	 title = new JLabel("To-Do List");
	 title.setFont(new Font("Serif", Font.BOLD, 20));
	 topPanel.add(fileMenuButton, BorderLayout.EAST);
	 topPanel.add(title, BorderLayout.CENTER);
	 contentPane.add(topPanel, BorderLayout.NORTH);

	 middlePanel = new JPanel(new BorderLayout());
	 textArea = new JTextArea(80,40);
	 //textArea.setSize(30, 100);
	 scrollPane= new JScrollPane(actionsPanel);
	 //scrollPane.setPreferredSize(new Dimension(450, 110));
	 scrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS); 
	 
	 middlePanel.add(scrollPane, BorderLayout.CENTER);
	 contentPane.add(middlePanel, BorderLayout.CENTER);
	 
	 bottomPanel = new JPanel(new BorderLayout());
	 bottomPanel.setBackground(Color.white);
	 newActionText = new JTextField("New Action");
	 newActionText.setPreferredSize(new Dimension(200, 50));
	 newActionText.addMouseListener(this);
	 ImageIcon addImage = new ImageIcon("C:/Users/lshen0597/eclipse-workspace/ToDoList/src/addButton.png");
	 addButton = new JButton(addImage);
	 addButton.addActionListener(this);
	 addButton.setActionCommand("Add Action");
	 addButton.setOpaque(false);
	 addButton.setContentAreaFilled(false);
	 addButton.setBorderPainted(false);
	 bottomPanel.add(addButton, BorderLayout.EAST);
	 bottomPanel.add(newActionText, BorderLayout.CENTER);
	 contentPane.add(bottomPanel, BorderLayout.SOUTH);
	 
 	/* Add content pane to frame */
	 frame.setContentPane(contentPane);
	 /* Size and then display the frame. */
	 frame.pack();
	 frame.setVisible(true);
 }
 
 public void actionPerformed(ActionEvent event) {
	 /*String eventName = event.getActionCommand();
	 
	    if (eventName.equals("Add Action")) {
	        String newActionText = this.newActionText.getText();
	        if (!newActionText.isEmpty()) {
	       	 	
	        	JPanel labelPanel = new JPanel(new BorderLayout(0,10));
	            actions.add(newActionText);
	            //JPanel actionPane = newAction(newActionText);
	            JLabel label1 = new JLabel(newActionText);
	            label1.setOpaque(true);
	            label1.setBackground(Color.gray); 
	            label1.setPreferredSize(new Dimension(50, 50)); 
	            label1.setBorder(BorderFactory.createEmptyBorder(4, 4, 4, 4));
	            ImageIcon image = new ImageIcon("C:/Users/lshen0597/eclipse-workspace/ToDoList/src/threebars_106419.png");
	            fileMenuButton = new JButton(image);
	            fileMenuButton.setActionCommand("drag");
	       	 	fileMenuButton.setOpaque(false);
	       	 	fileMenuButton.setContentAreaFilled(false);
	       	 	fileMenuButton.setBorderPainted(false);
	       	 	labelPanel.add(label1, BorderLayout.CENTER);
	       	 	labelPanel.add(fileMenuButton, BorderLayout.WEST);
	            actionsPanel.add(labelPanel);
	            actionsPanel.revalidate();
	            actionsPanel.repaint();
	            // Append the new action text to the existing textArea
	            //textArea.append(newActionText + "\n");
	            //this.actionsPanel.add(label);
	            //middlePanel.add(scrollPane, BorderLayout.CENTER);
	            //contentPane.add(scrollPane, BorderLayout.CENTER);
	            // Clear the newActionText field
	            this.newActionText.setText("");
	        }
	    }*/
	 
 }
 
 private static void runGUI() {
	 JFrame.setDefaultLookAndFeelDecorated(true);
	 MainScreen ms = new MainScreen();
 }
 
 public JLabel newAction(String action) {
	    JLabel toDoAction = new JLabel(action);
	    toDoAction.setPreferredSize(new Dimension(400, 20));  // Set the preferred size of the label
	    toDoAction.setOpaque(true);
	    toDoAction.setBackground(Color.BLUE);
	    toDoAction.setBorder(BorderFactory.createEmptyBorder(5, 10, 5, 10));  // Adjust the border to provide spacing
	    toDoAction.setHorizontalAlignment(SwingConstants.LEFT);  // Align the label to the left
	    actions.add(action);
	    return toDoAction;
	}
 
 public static void main(String[] args) {
	 /* Methods that create and show a GUI should be
	 run from an event-dispatching thread */
	 javax.swing.SwingUtilities.invokeLater(new Runnable() {
	 public void run() {
	 runGUI();
	 }
	 });
	 }

@Override
public void mouseClicked(MouseEvent e) {
	// TODO Auto-generated method stub
	if (e.getSource() == newActionText) {
        addActionDialog();
    }
}

@Override
public void mousePressed(MouseEvent e) {
	// TODO Auto-generated method stub
	
}

@Override
public void mouseReleased(MouseEvent e) {
	// TODO Auto-generated method stub
	
}

@Override
public void mouseEntered(MouseEvent e) {
	// TODO Auto-generated method stub
	
}

@Override
public void mouseExited(MouseEvent e) {
	// TODO Auto-generated method stub
	
}

private void addActionDialog() {
    JTextField actionInput = new JTextField(15);
    JComboBox<String> urgencyDropdown = new JComboBox<>();
    urgencyDropdown.addItem("Urgent");
    urgencyDropdown.addItem("Current");
    urgencyDropdown.addItem("Eventual");
    urgencyDropdown.addItem("Inactive");

    JButton selectDateButton = new JButton("Select Date");
    JTextField dateTextField = new JTextField(10);
    dateTextField.setEditable(false);

    JPanel datePanel = new JPanel();
    datePanel.add(dateTextField);
    datePanel.add(selectDateButton);

    JPanel myPanel = new JPanel();
    myPanel.setLayout(new GridLayout(0, 2));
    myPanel.add(new JLabel("Action: "));
    myPanel.add(actionInput);
    myPanel.add(new JLabel("Urgency: "));
    myPanel.add(urgencyDropdown);
    myPanel.add(new JLabel("Date: "));
    myPanel.add(datePanel);

    selectDateButton.addActionListener(new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            Date selectedDate = new Date();
            if (selectedDate != null) {
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                dateTextField.setText(sdf.format(selectedDate));
            }
        }
    });
    int result = JOptionPane.showConfirmDialog(null, myPanel, "Add Action", JOptionPane.OK_CANCEL_OPTION);

    if (result == JOptionPane.OK_OPTION) {
        String newActionText = actionInput.getText();
        if (!newActionText.isEmpty()) {
            actions.add(newActionText);
            JLabel label = newAction(newActionText);
            this.newActionText.setText("");
            JPanel labelPanel = new JPanel(new BorderLayout(0,10));
            labelPanel.setPreferredSize(new Dimension(450, 50));
            //JPanel actionPane = newAction(newActionText);
            //JLabel label1 = new JLabel(newActionText);
            label.setOpaque(true);
            label.setBackground(Color.gray); 
            label.setPreferredSize(new Dimension(50, 50)); 
            label.setBorder(BorderFactory.createEmptyBorder(5, 10, 5, 10));
            label.setHorizontalAlignment(SwingConstants.LEFT);  
            ImageIcon image = new ImageIcon("C:/Users/lshen0597/eclipse-workspace/ToDoList/src/threebars_106419.png");
            fileMenuButton = new JButton(image);
            fileMenuButton.setActionCommand("drag");
       	 	fileMenuButton.setOpaque(false);
       	 	fileMenuButton.setContentAreaFilled(false);
       	 	fileMenuButton.setBorderPainted(false);
       	 	labelPanel.add(label, BorderLayout.CENTER);
       	 	labelPanel.add(fileMenuButton, BorderLayout.WEST);
            actionsPanel.add(labelPanel);
            actionsPanel.revalidate();
            actionsPanel.repaint();
           
            this.newActionText.setText("");
        }
    }
}
 }
