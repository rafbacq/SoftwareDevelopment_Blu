import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.ArrayList;

import javax.swing.Icon;
public class MainScreen implements ActionListener{
 private static final float RIGHT_ALIGNMENT = 0;
JFrame frame;
 JPanel contentPane, topPanel, middlePanel, bottomPanel;
 JLabel title;
 JTextField newActionText;
 JButton fileMenuButton, addButton;
 JScrollPane scrollPane;
 JTextArea textArea;
 JPanel actionsPanel = new JPanel(new GridLayout(0,1));
 ArrayList<String> actions = new ArrayList<String>();
 ArrayList<String> status = new ArrayList<String>();
 public MainScreen(){
	 /* Create and set up the frame */
	 frame = new JFrame("To Do List");
	 frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	 //frame.setSize(600,800);
	 frame.setBackground(Color.BLUE);
	 /* Create content pane with a GridLayout and empty borders */
	 contentPane = new JPanel();
	 contentPane.setLayout(new BorderLayout(0, 10));
	 contentPane.setPreferredSize(new Dimension(600, 800));

	 contentPane.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
	 contentPane.setBackground(new Color(173, 216, 230));
	 
	 topPanel = new JPanel(new BorderLayout());
	 ImageIcon fileImage = new ImageIcon("C:/Users/lshen0597/eclipse-workspace/ToDoList/src/menu_456243 (3).png");
	 fileMenuButton = new JButton(fileImage);
	 fileMenuButton.setActionCommand("File");
	 fileMenuButton.setOpaque(false);
	 fileMenuButton.setContentAreaFilled(false);
	 fileMenuButton.setBorderPainted(false);
	
	 
	 title = new JLabel("To-Do List");
	 title.setFont(new Font("Serif", Font.BOLD, 20));
	 topPanel.add(fileMenuButton, BorderLayout.EAST);
	 topPanel.add(title, BorderLayout.CENTER);
	 contentPane.add(topPanel, BorderLayout.NORTH);

	 middlePanel = new JPanel(new BorderLayout());
	 textArea = new JTextArea(80,40);
	 //textArea.setSize(30, 100);
	 scrollPane= new JScrollPane(actionsPanel);
	 //scrollPane.setPreferredSize(new Dimension(450, 110));
	 scrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS); 
	 
	 middlePanel.add(scrollPane, BorderLayout.CENTER);
	 contentPane.add(middlePanel, BorderLayout.CENTER);
	 
	 bottomPanel = new JPanel(new BorderLayout());
	 bottomPanel.setBackground(Color.white);
	 newActionText = new JTextField("New Action");
	 newActionText.setPreferredSize(new Dimension(200, 50));
	 ImageIcon addImage = new ImageIcon("C:/Users/lshen0597/eclipse-workspace/ToDoList/src/addButton.png");
	 addButton = new JButton(addImage);
	 addButton.addActionListener(this);
	 addButton.setActionCommand("Add Action");
	 addButton.setOpaque(false);
	 addButton.setContentAreaFilled(false);
	 addButton.setBorderPainted(false);
	 bottomPanel.add(addButton, BorderLayout.EAST);
	 bottomPanel.add(newActionText, BorderLayout.CENTER);
	 contentPane.add(bottomPanel, BorderLayout.SOUTH);
	 
 	/* Add content pane to frame */
	 frame.setContentPane(contentPane);
	 /* Size and then display the frame. */
	 frame.pack();
	 frame.setVisible(true);
 }
 
 public void actionPerformed(ActionEvent event) {
	 String eventName = event.getActionCommand();
	 
	    if (eventName.equals("Add Action")) {
	        String newActionText = this.newActionText.getText();
	        if (!newActionText.isEmpty()) {
	        	
	            actions.add(newActionText);
	            //JPanel actionPane = newAction(newActionText);
	            JLabel label = newAction(newActionText);
	            JLabel label1 = new JLabel(newActionText);
	            label1.setOpaque(true);
	            label1.setBackground(Color.PINK); // Example: Blue background color
	            label1.setPreferredSize(new Dimension(50, 50)); // Example: Custom size
	            label1.setBorder(BorderFactory.createEmptyBorder(4, 4, 4, 4));
	            actionsPanel.add(label1);
	            actionsPanel.revalidate();
	            actionsPanel.repaint();
	            // Append the new action text to the existing textArea
	            //textArea.append(newActionText + "\n");
	            //this.actionsPanel.add(label);
	            //middlePanel.add(scrollPane, BorderLayout.CENTER);
	            //contentPane.add(scrollPane, BorderLayout.CENTER);
	            // Clear the newActionText field
	            this.newActionText.setText("");
	        }
	    }
	 
 }
 
 private static void runGUI() {
	 JFrame.setDefaultLookAndFeelDecorated(true);
	 MainScreen ms = new MainScreen();
 }
 
 public JLabel newAction(String action) {
	 //JPanel actionPane = new JPanel(new BorderLayout());
	 JLabel toDoAction = new JLabel(action);
	 toDoAction.setPreferredSize(new Dimension(50,20));
	 toDoAction.setOpaque(true);
	 toDoAction.setBackground(Color.BLUE);
	 actions.add(action);
	 return toDoAction;
	 
 }
 
 public static void main(String[] args) {
	 /* Methods that create and show a GUI should be
	 run from an event-dispatching thread */
	 javax.swing.SwingUtilities.invokeLater(new Runnable() {
	 public void run() {
	 runGUI();
	 }
	 });
	 }
 }
